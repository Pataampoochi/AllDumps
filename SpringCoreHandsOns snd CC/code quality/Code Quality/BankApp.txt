Automatic evaluation[-]
Proposed grade: 100.0 / 100
Result Description
[+]Grading and Feedback
BankApp/src/com/dao/AccountDAO.java
    1 package com.dao;
    2 
    3 
    4 import java.util.ArrayList;
    5 import java.util.List;
    6 
    7 //import com.model.Customer;
    8 import com.model.Account;
    9 
   10 //import java.io.IOException;
   11 
   12 public class AccountDAO {
   13 	
   14 	List<Account> accountList = new ArrayList<>();
   15 	
   16 	public void addAccount(Account account){
   17 		accountList.add(account);
   18 	}
   19 	
   20 	public Account viewAccountByAccountNumber(int accountNumber) {
   21 		
   22 		if(accountList.isEmpty()){
   23 			return null;
   24 		}
   25 		else{
   26 			for(Account a : accountList){
   27 				if(a.getAccountNumber()==accountNumber){
   28 					return a;
   29 				}
   30 			}
   31 		return null;	
   32 	}
   33 	}
   34 
   35 }
   36 
BankApp/src/com/dao/CustomerDAO.java
    1 package com.dao;
    2 
    3 import java.util.*;
    4 
    5 import com.model.Customer;
    6 
    7 public class CustomerDAO {
    8 	
    9 	List<Customer> customerList = new ArrayList<>();
   10 	
   11 	public void addCustomer(Customer customer){
   12 		customerList.add(customer);
   13 	}
   14 	
   15 	public List<Customer> viewAllCustomer(){
   16 		if(customerList.isEmpty()){
   17 			return null;
   18 		}
   19 		return customerList;		
   20 	}
   21 	
   22 	public boolean updatePan(int customerId,String panNumber){
   23 		//boolean flag=false;
   24 		for(Customer c : customerList){
   25 			if(c.getCustomerId()==customerId){
   26 				c.setPanNumber(panNumber);
   27 				return true;
   28 			}
   29 		}
   30 		return false;
   31 	}
   32 
   33 }
   34 
BankApp/src/com/dao/TransactionDAO.java
    1 package com.dao;
    2 
    3 import java.util.ArrayList;
    4 import java.util.List;
    5 
    6 import com.model.Transaction;
    7 
    8 public class TransactionDAO {
    9 	
   10 	List<Transaction> transactionList = new  ArrayList<Transaction>();
   11 
   12 	public List<Transaction> getTransactionList() {
   13 		return transactionList;
   14 	}
   15 
   16     public void addTransaction(Transaction obj){
   17     	transactionList.add(obj);
   18     }
   19 	
   20     public void removeObj(int transactionId){
   21         transactionList.remove(transactionId);	
   22     }
   23 }
   24 
BankApp/src/com/model/Account.java
    1 package com.model;
    2 
    3 public class Account {
    4 	int accountNumber;
    5 	String accountType="Savings";
    6 	Customer customer;
    7 	double balance;
    8 	static final float MINIMUMBALANCE=5000;
    9 	static final float TRANSACTIONCHARGES=150;
   10 	
   11 	public Account(int accountNumber, String accountType, Customer customer, double balance) {		
   12 		this.accountNumber = accountNumber;
   13 		this.accountType = accountType;
   14 		this.customer = customer;
   15 		this.balance = balance;
   16 	}
   17 
   18 	public int getAccountNumber() {
   19 		return accountNumber;
   20 	}
   21 
   22 	public void setAccountNumber(int accountNumber) {
   23 		this.accountNumber = accountNumber;
   24 	}
   25 
   26 	public String getAccountType() {
   27 		return accountType;
   28 	}
   29 
   30 	public void setAccountType(String accountType) {
   31 		this.accountType = accountType;
   32 	}
   33 
   34 	public Customer getCustomer() {
   35 		return customer;
   36 	}
   37 
   38 	public void setCustomer(Customer customer) {
   39 		this.customer = customer;
   40 	}
   41 
   42 	public double getBalance() {
   43 		return balance;
   44 	}
   45 
   46 	public void setBalance(double balance) {
   47 		this.balance = balance;
   48 	}
   49 
   50 	public static float getMinimumbalance() {
   51 		return MINIMUMBALANCE;
   52 	}
   53 
   54 	public static float getTransactioncharges() {
   55 		return TRANSACTIONCHARGES;
   56 	}
   57 
   58 	public void deposit(double amount){
   59 		balance=balance + amount;
   60 	}
   61 	
   62 	public void withdraw(double amount){
   63 		balance=balance - amount;
   64 	}	
   65 	
   66 	public boolean checkBalance(double amount){
   67 	    return(balance-amount > MINIMUMBALANCE);
   68 	    
   69 		/*double bal=0;
   70 		if(balance-amount > minimumBalance)
   71 			return true;
   72 		else
   73 			return false;*/
   74 	}
   75 }
   76 
BankApp/src/com/model/Customer.java
    1 package com.model;
    2 
    3 public class Customer {
    4 	
    5 	int customerId;
    6 	String customerName;
    7 	String address;
    8 	String panNumber;
    9 	
   10 	public Customer(int customerId, String customerName, String address, String panNumber) {
   11 		super();
   12 		this.customerId = customerId;
   13 		this.customerName = customerName;
   14 		this.address = address;
   15 		this.panNumber = panNumber;
   16 	}
   17 	
   18 
   19 	public int getCustomerId() {
   20 		return customerId;
   21 	}
   22 
   23 	public void setCustomerId(int customerId) {
   24 		this.customerId = customerId;
   25 	}
   26 
   27 	public String getCustomerName() {
   28 		return customerName;
   29 	}
   30 
   31 	public void setCustomerName(String customerName) {
   32 		this.customerName = customerName;
   33 	}
   34 
   35 	public String getAddress() {
   36 		return address;
   37 	}
   38 
   39 	public void setAddress(String address) {
   40 		this.address = address;
   41 	}
   42 
   43 	public String getPanNumber() {
   44 		return panNumber;
   45 	}
   46 
   47 	public void setPanNumber(String panNumber) {
   48 		this.panNumber = panNumber;
   49 	}
   50 }
   51 
BankApp/src/com/model/Transaction.java
    1 package com.model;
    2 
    3 public class Transaction {
    4 	
    5 	int transactionId;
    6 	Account account;
    7 	String transactionType="Saving";
    8 	double amount;
    9 	
   10 	public Transaction(int transactionId, Account account, String transactionType, double amount) {
   11 		this.transactionId = transactionId;
   12 		this.account = account;
   13 		this.transactionType = transactionType;
   14 		this.amount = amount;
   15 	}
   16 
   17 	public int getTransactionId() {
   18 		return transactionId;
   19 	}
   20 
   21 	public void setTransactionId(int transactionId) {
   22 		this.transactionId = transactionId;
   23 	}
   24 
   25 	public Account getAccount() {
   26 		return account;
   27 	}
   28 
   29 	public void setAccount(Account account) {
   30 		this.account = account;
   31 	}
   32 
   33 	public String getTransactionType() {
   34 		return transactionType;
   35 	}
   36 
   37 	public void setTransactionType(String transactionType) {
   38 		this.transactionType = transactionType;
   39 	}
   40 
   41 	public double getAmount() {
   42 		return amount;
   43 	}
   44 
   45 	public void setAmount(double amount) {
   46 		this.amount = amount;
   47 	}
   48 }
   49 
Grade
Reviewed on Tuesday, 4 May 2021, 2:24 AM by Automatic grade
Grade 100 / 100
Assessment report
[+]Grading and Feedback